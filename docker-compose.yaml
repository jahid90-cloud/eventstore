version: '3'

networks:
  traefik:
    name: traefik
    driver: bridge
  backend:
    name: backend
    driver: bridge

volumes:
  eventstore-service-node-modules:

services:
  openapi:
    image: registry.jahiduls.mint/swaggerapi/swagger-ui:latest
    container_name: eventstore-openapi
    restart: unless-stopped
    networks:
      - traefik
    volumes:
      - ./spec:/var/specs:ro
    environment:
      - BASE_URL=/explore
      - SWAGGER_JSON=/var/specs/event-store.yaml
    expose:
      - 8080
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.http.routers.eventstore-openapi.rule=Host(`eventstore.jahiduls.mint`) && PathPrefix(`/explore`)
      - traefik.http.routers.eventstore-openapi.entrypoints=websecure
      - traefik.http.routers.eventstore-openapi.tls=true
      - traefik.http.routers.eventstore-openapi.service=eventstore-openapi@docker
      - traefik.http.services.eventstore-openapi.loadbalancer.server.port=8080

  eventstore:
    image: registry.jahiduls.mint/eventstore:${POSTGRES_VERSION}-${MESSAGE_DB_VERSION}
    build:
      context: ./database
      dockerfile: Dockerfile
      args:
        - POSTGRES_VERSION=${POSTGRES_VERSION}
        - MESSAGE_DB_VERSION=${MESSAGE_DB_VERSION}
    container_name: eventstore
    restart: unless-stopped
    networks:
      - traefik
      - backend
    volumes:
      - /data/docker/eventstore/data/pgdata:/bitnami/postgresql
    environment:
      - POSTGRESQL_PASSWORD=password
      - POSTGRES_VERSION=${POSTGRES_VERSION}
      - MESSAGE_DB_VERSION=${MESSAGE_DB_VERSION}
    expose:
      - 5432
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.tcp.routers.eventstore.entrypoints=postgres
      - traefik.tcp.routers.eventstore.rule=HostSNI(`eventstore.jahiduls.mint`)
      - traefik.tcp.routers.eventstore.service=eventstore@docker
      - traefik.tcp.services.eventstore.loadbalancer.server.port=5432

  eventstore-service:
    image: registry.jahiduls.mint/eventstore-service:local
    build: ./service
    container_name: eventstore-service
    restart: unless-stopped
    networks:
      - traefik
      - backend
    #volumes:
      #- eventstore-service-node-modules:/app/node_modules
    environment:
      - APP_NAME=Event Store
      - PORT=80
      - NODE_ENV=production
      - EVENTSTORE_CONNECTION_STRING=${EVENTSTORE_CONNECTION_STRING}
    expose:
      - 80
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.http.routers.eventstore-service.rule=Host(`eventstore.jahiduls.mint`) && PathPrefix(`/api`)
      - traefik.http.routers.eventstore-service.entrypoints=websecure
      - traefik.http.routers.eventstore-service.tls=true
      - traefik.http.routers.eventstore-service.service=eventstore-service@docker
      - traefik.http.routers.eventstore-service.middlewares=stripprefix-api@docker
      - traefik.http.services.eventstore-service.loadbalancer.server.port=80
      - traefik.http.middlewares.stripprefix-api.stripprefix.prefixes=/api
