version: '3'

networks:
  traefik:
    name: traefik
    driver: bridge
  backend:
    name: backend
    driver: bridge

volumes:
  eventstore-service-node-modules:

services:

  openapi:
    image: registry.jahiduls.mint/swaggerapi/swagger-ui:latest
    container_name: eventstore-openapi
    restart: unless-stopped
    networks:
      - traefik
    volumes:
      - ./spec:/var/specs:ro
    environment:
      - BASE_URL=/explore
      - SWAGGER_JSON=/var/specs/event-store.yaml
    expose:
      - 8080
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.http.routers.eventstore-openapi.rule=Host(`eventstore.jahiduls.mint`) && PathPrefix(`/explore`)
      - traefik.http.routers.eventstore-openapi.entrypoints=websecure
      - traefik.http.routers.eventstore-openapi.tls=true
      - traefik.http.routers.eventstore-openapi.service=eventstore-openapi@docker
      - traefik.http.services.eventstore-openapi.loadbalancer.server.port=8080

  eventstore:
    image: registry.jahiduls.mint/eventstore:${POSTGRES_VERSION}-${MESSAGE_DB_VERSION}
    build:
      context: ./database
      dockerfile: Dockerfile
      args:
        - MESSAGE_DB_VERSION=${MESSAGE_DB_VERSION}
        - POSTGRES_VERSION=${POSTGRES_VERSION}
    container_name: eventstore
    restart: unless-stopped
    networks:
      - traefik
      - backend
    volumes:
      - /data/docker/eventstore/data/pgdata:/bitnami/postgresql
    environment:
      - MESSAGE_DB_VERSION=${MESSAGE_DB_VERSION}
      - POSTGRES_VERSION=${POSTGRES_VERSION}
      - POSTGRESQL_PASSWORD=password
    expose:
      - 5432
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.tcp.routers.eventstore.entrypoints=postgres
      - traefik.tcp.routers.eventstore.rule=HostSNI(`*`)
      - traefik.tcp.routers.eventstore.service=eventstore@docker
      - traefik.tcp.services.eventstore.loadbalancer.server.port=5432

  eventstore-service:
    image: registry.jahiduls.mint/eventstore-service:local
    build: ./service
    container_name: eventstore-service
    restart: unless-stopped
    networks:
      - traefik
      - backend
    #volumes:
      #- eventstore-service-node-modules:/app/node_modules
    environment:
      - APP_NAME=Event Store
      - ENABLE_GRPC_TEST_RUN=${ENABLE_GRPC_TEST_RUN}
      - EVENTSTORE_CONNECTION_STRING=${EVENTSTORE_CONNECTION_STRING}
      - GRPC_SERVER_ADDRESS=${GRPC_SERVER_ADDRESS}
      - NODE_ENV=production
      - PORT=80
    expose:
      - 80
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.http.routers.eventstore-service.rule=Host(`eventstore.jahiduls.mint`) && PathPrefix(`/api`)
      - traefik.http.routers.eventstore-service.entrypoints=websecure
      - traefik.http.routers.eventstore-service.tls=true
      - traefik.http.routers.eventstore-service.service=eventstore-service@docker
      - traefik.http.routers.eventstore-service.middlewares=stripprefix-api@docker
      - traefik.http.services.eventstore-service.loadbalancer.server.port=80
      - traefik.http.middlewares.stripprefix-api.stripprefix.prefixes=/api


  admin-app:
    image: registry.jahiduls.mint/eventstore-admin-app:local
    build: ./admin/frontend
    container_name: eventstore-admin-app
    restart: unless-stopped
    networks:
      - traefik
      - backend
    environment:
      - APP_NAME=Event Store Admin App
      - COOKIE_SECRET=${COOKIE_SECRET}
      - DATABASE_CONNECTION_STRING=${DATABASE_CONNECTION_STRING}
      - ENABLE_DEBUG=false
      - EVENT_STORE_CLIENT_ID=evs-admin-app@prod
      - EVENT_STORE_SERVICE_CREDENTIALS=admin-app:password
      - EVENT_STORE_SERVICE_URL=http://eventstore-service
      - MESSAGE_STORE_CONNECTION_STRING=${EVENTSTORE_CONNECTION_STRING}
      - NODE_ENV=production
      - PORT=80
    expose:
      - 80
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.http.routers.eventstore-admin-app.entrypoints=websecure
      - traefik.http.routers.eventstore-admin-app.rule=Host(`eventstore.jahiduls.mint`)
      - traefik.http.routers.eventstore-admin-app.tls=true
      - traefik.http.routers.eventstore-admin-app.service=eventstore-admin-app
      - traefik.http.services.eventstore-admin-app.loadbalancer.server.port=80

  admin-aggregators:
    image: registry.jahiduls.mint/eventstore-admin-aggregators:local
    build: ./admin/backend/aggregators
    container_name: eventstore-admin-aggregators
    restart: unless-stopped
    networks:
      - backend
    environment:
      - NODE_ENV=production
      - ENABLE_DEBUG=false
      - DATABASE_CONNECTION_STRING=${DATABASE_CONNECTION_STRING}
      - MESSAGE_STORE_CONNECTION_STRING=${EVENTSTORE_CONNECTION_STRING}

  admin-components:
    image: registry.jahiduls.mint/eventstore-admin-components:local
    build: ./admin/backend/components
    container_name: eventstore-admin-components
    restart: unless-stopped
    networks:
      - backend
    environment:
      - DATABASE_CONNECTION_STRING=${DATABASE_CONNECTION_STRING}
      - EMAIL_DIRECTORY=${EMAIL_DIRECTORY}
      - ENABLE_DEBUG=false
      - MESSAGE_STORE_CONNECTION_STRING=${EVENTSTORE_CONNECTION_STRING}
      - NODE_ENV=production
      - SYSTEM_SENDER_EMAIL_ADDRESS=${SYSTEM_SENDER_EMAIL_ADDRESS}

